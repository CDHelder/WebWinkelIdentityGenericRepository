@page
@model EditStocksModel

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Edit Stock</h3>

<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Product.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Product.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Product.Price)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Product.Price)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Product.Color)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Product.Color)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Product.Fabric)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Product.Fabric)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Product.Brand)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Product.Brand.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Product.Category)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Product.Category.Name)
        </dd>
    </dl>
</div>
<hr />


<h3>Stock </h3>
<form method="post">
    <table class="table">
        <thead>
            <tr>
                <th>

                </th>
                @foreach (var product in Model.ProductVariations)
                {
                    <th>
                        @(product.Size)
                    </th>
                }
                <th></th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.Stores.Count(); i++)
            {
                <tr>
                    <td>
                        <b>@Model.Stores[i].Address.City</b>
                    </td>
                    @for (int y = 0; y < Model.ProductStocks.Count(); y++)
                    {
                        if (Model.Stores[i].Id == Model.ProductStocks[y].StoreId)
                        {

                            @Html.HiddenFor(model => Model.ProductStocks[y].Id)
                            @Html.HiddenFor(model => Model.ProductStocks[y].InTransport)
                            @Html.HiddenFor(model => Model.ProductStocks[y].ProductId)
                            @Html.HiddenFor(model => Model.ProductStocks[y].StoreId)
                            <td class="form-group">
                                <input asp-for="@Model.ProductStocks[y].Quantity" class="form-control" />
                                <span asp-validation-for="@Model.ProductStocks[y].Quantity" class="text-danger"></span>
                            </td>
                        }
                    }
                </tr>
            }
        @foreach (var item in Model.BeforeChangeStockValues)
        {
            @Html.HiddenFor(s => s.BeforeChangeStockValues[item.Key])
            @*@Html.HiddenFor(s => s.BeforeChangeStockValues[item.Value])*@
        }
        </tbody>
    </table>
    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-primary" />
    </div>
</form>

<div>
    <a asp-page="./Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
